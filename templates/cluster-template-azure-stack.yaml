apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AzureCluster
    name: ${CLUSTER_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureCluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: default
spec:
  location: ${AZURE_LOCATION}
  networkSpec:
    vnet:
      name: ${AZURE_VNET_NAME}
  resourceGroup: ${AZURE_RESOURCE_GROUP}
  subscriptionID: ${AZURE_SUBSCRIPTION_ID}
---
apiVersion: controlplane.cluster.x-k8s.io/v1alpha3
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  infrastructureTemplate:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AzureMachineTemplate
    name: ${CLUSTER_NAME}-control-plane
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
        extraVolumes:
        - hostPath: /etc/kubernetes/azure.json
          mountPath: /etc/kubernetes/azure.json
          name: cloud-config
          readOnly: true
        timeoutForControlPlane: 20m
      controllerManager:
        extraArgs:
          allocate-node-cidrs: "false"
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
          cluster-name: ${CLUSTER_NAME}
        extraVolumes:
        - hostPath: /etc/kubernetes/azure.json
          mountPath: /etc/kubernetes/azure.json
          name: cloud-config
          readOnly: true
        - hostPath: /etc/kubernetes/azurestackcloud.json
          mountPath: /etc/kubernetes/azurestackcloud.json
          name: cloud-config-stack
          readOnly: true
    files:
    - content: "{\n  \"cloud\": \"${AZURE_ENVIRONMENT}\",\n  \"tenantId\": \"adfs\",\n
        \ \"subscriptionId\": \"${AZURE_SUBSCRIPTION_ID}\",\n  \"aadClientId\": \"${AZURE_CLIENT_ID}\",\n
        \ \"aadClientSecret\": \"${AZURE_CLIENT_SECRET}\",\n  \"resourceGroup\": \"${AZURE_RESOURCE_GROUP}\",\n
        \ \"securityGroupName\": \"${CLUSTER_NAME}-node-nsg\",\n  \"location\": \"${AZURE_LOCATION}\",\n
        \ \"vmType\": \"vmss\",\n  \"vnetName\": \"${CLUSTER_NAME}-vnet\",\n  \"vnetResourceGroup\":
        \"${AZURE_RESOURCE_GROUP}\",\n  \"subnetName\": \"${CLUSTER_NAME}-node-subnet\",\n
        \ \"routeTableName\": \"${CLUSTER_NAME}-node-routetable\",\n  \"userAssignedID\":
        \"${CLUSTER_NAME}\",\n  \"loadBalancerSku\": \"Basic\",\n  \"maximumLoadBalancerRuleCount\":
        250,\n  \"useManagedIdentityExtension\": false,\n  \"useInstanceMetadata\":
        false, \n  \"excludeMasterFromStandardLB\": false\n}\n"
      owner: root:root
      path: /etc/kubernetes/azure.json
      permissions: "0644"
    - content: |
        {
          "name":"${AZURE_ENVIRONMENT}",
          "managementPortalURL":"https://portal.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
          "publishSettingsURL":"",
          "serviceManagementEndpoint":"https://management.adfs.n31r1203.masd.stbtest.microsoft.com/98bbb015-dcf2-467c-a1cb-951df61a0948",
          "resourceManagerEndpoint":"https://management.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
          "activeDirectoryEndpoint":"https://adfs.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
          "galleryEndpoint":"https://providers.n31r1203.masd.stbtest.microsoft.com:30016/",
          "keyVaultEndpoint":"",
          "graphEndpoint":"https://graph.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
          "serviceBusEndpoint":"",
          "batchManagementEndpoint":"",
          "storageEndpointSuffix":"redmond.ext-n31r1203.masd.stbtest.microsoft.com",
          "sqlDatabaseDNSSuffix":"",
          "trafficManagerDNSSuffix":"",
          "keyVaultDNSSuffix":"vault.redmond.ext-n31r1203.masd.stbtest.microsoft.com",
          "serviceBusEndpointSuffix":"",
          "serviceManagementVMDNSSuffix":"",
          "resourceManagerVMDNSSuffix":"cloudapp.ext-n31r1203.masd.stbtest.microsoft.com",
          "containerRegistryDNSSuffix":"",
          "cosmosDBDNSSuffix":"",
          "tokenAudience":"",
          "resourceIdentifiers":{"graph":"","keyVault":"","datalake":"","batch":"","operationalInsights":"","storage":""}
        }
      owner: root:root
      path: /etc/kubernetes/azurestackcloud.json
      permissions: "0644"
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
        name: '{{ ds.meta_data["local_hostname"] }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-config: /etc/kubernetes/azure.json
          cloud-provider: azure
        name: '{{ ds.meta_data["local_hostname"] }}'
    postKubeadmCommands:
    - 'sudo sed -i ''s/imagePullPolicy: IfNotPresent/imagePullPolicy: IfNotPresent\n    env:\n    -
      name: AZURE_ENVIRONMENT_FILEPATH\n      value: \/etc\/kubernetes\/azurestackcloud.json/g''
      /etc/kubernetes/manifests/kube-controller-manager.yaml'
    preKubeadmCommands:
    - sudo cp /var/lib/waagent/Certificates.pem /usr/local/share/ca-certificates/azsCertificate.crt
    - sudo update-ca-certificates
    - sudo echo 'Environment=AZURE_ENVIRONMENT_FILEPATH=/etc/kubernetes/azurestackcloud.json'
      \ >> /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
    - sudo systemctl daemon-reload
    - sudo systemctl restart kubelet
    useExperimentalRetryJoin: true
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
  namespace: default
spec:
  template:
    spec:
      image:
        marketplace:
          offer: Test
          publisher: AzureStack
          sku: capz-test
          version: latest
      location: ${AZURE_LOCATION}
      osDisk:
        diskSizeGB: 128
        managedDisk:
          storageAccountType: Premium_LRS
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY}
      vmSize: ${AZURE_CONTROL_PLANE_MACHINE_TYPE}
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-md-0
      clusterName: ${CLUSTER_NAME}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: AzureMachineTemplate
        name: ${CLUSTER_NAME}-md-0
      version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AzureMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  template:
    spec:
      image:
        marketplace:
          offer: Test
          publisher: AzureStack
          sku: capz-test
          version: latest
      location: ${AZURE_LOCATION}
      osDisk:
        diskSizeGB: 30
        managedDisk:
          storageAccountType: Premium_LRS
        osType: Linux
      sshPublicKey: ${AZURE_SSH_PUBLIC_KEY}
      vmSize: ${AZURE_NODE_MACHINE_TYPE}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
  namespace: default
spec:
  template:
    spec:
      files:
      - content: |
          {
            "cloud": "${AZURE_ENVIRONMENT}",
            "tenantId": "adfs",
            "subscriptionId": "${AZURE_SUBSCRIPTION_ID}",
            "aadClientId": "${AZURE_CLIENT_ID}",
            "aadClientSecret": "${AZURE_CLIENT_SECRET}",
            "resourceGroup": "${AZURE_RESOURCE_GROUP}",
            "securityGroupName": "${CLUSTER_NAME}-node-nsg",
            "location": "${AZURE_LOCATION}",
            "vmType": "vmss",
            "vnetName": "${CLUSTER_NAME}-vnet",
            "vnetResourceGroup": "${AZURE_RESOURCE_GROUP}",
            "subnetName": "${CLUSTER_NAME}-node-subnet",
            "routeTableName": "${CLUSTER_NAME}-node-routetable",
            "loadBalancerSku": "Basic",
            "maximumLoadBalancerRuleCount": 250,
            "useManagedIdentityExtension": false,
            "useInstanceMetadata": false,
            "excludeMasterFromStandardLB": false
          }
        owner: root:root
        path: /etc/kubernetes/azure.json
        permissions: "0644"
      - content: |
          {
            "name":"${AZURE_ENVIRONMENT}",
            "managementPortalURL":"https://portal.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
            "publishSettingsURL":"",
            "serviceManagementEndpoint":"https://management.adfs.n31r1203.masd.stbtest.microsoft.com/98bbb015-dcf2-467c-a1cb-951df61a0948",
            "resourceManagerEndpoint":"https://management.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
            "activeDirectoryEndpoint":"https://adfs.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
            "galleryEndpoint":"https://providers.n31r1203.masd.stbtest.microsoft.com:30016/",
            "keyVaultEndpoint":"",
            "graphEndpoint":"https://graph.redmond.ext-n31r1203.masd.stbtest.microsoft.com/",
            "serviceBusEndpoint":"",
            "batchManagementEndpoint":"",
            "storageEndpointSuffix":"redmond.ext-n31r1203.masd.stbtest.microsoft.com",
            "sqlDatabaseDNSSuffix":"",
            "trafficManagerDNSSuffix":"",
            "keyVaultDNSSuffix":"vault.redmond.ext-n31r1203.masd.stbtest.microsoft.com",
            "serviceBusEndpointSuffix":"",
            "serviceManagementVMDNSSuffix":"",
            "resourceManagerVMDNSSuffix":"cloudapp.ext-n31r1203.masd.stbtest.microsoft.com",
            "containerRegistryDNSSuffix":"",
            "cosmosDBDNSSuffix":"",
            "tokenAudience":"",
            "resourceIdentifiers":{"graph":"","keyVault":"","datalake":"","batch":"","operationalInsights":"","storage":""}
          }
        owner: root:root
        path: /etc/kubernetes/azurestackcloud.json
        permissions: "0644"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-config: /etc/kubernetes/azure.json
            cloud-provider: azure
          name: '{{ ds.meta_data["local_hostname"] }}'
      postKubeadmCommands:
      - 'sudo sed -i ''s/imagePullPolicy: IfNotPresent/imagePullPolicy: IfNotPresent\n    env:\n    -
        name: AZURE_ENVIRONMENT_FILEPATH\n      value: \/etc\/kubernetes\/azurestackcloud.json/g''
        /etc/kubernetes/manifests/kube-controller-manager.yaml'
      preKubeadmCommands:
      - sudo cp /var/lib/waagent/Certificates.pem /usr/local/share/ca-certificates/azsCertificate.crt
      - sudo update-ca-certificates
      - sudo echo 'Environment=AZURE_ENVIRONMENT_FILEPATH=/etc/kubernetes/azurestackcloud.json'
        \ >> /usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf
      - sudo systemctl daemon-reload
      - sudo systemctl restart kubelet
